import numpy as np 
import pyautogui as auto 
import keyboard 
import os 
from pynput.mouse import Button, Controller 
from vidgear.gears import ScreenGear 
import utils 
import time 
def main(): 
    stream = ScreenGear().start() 
    def endProgram(): 
        keyboard.unhook_all_hotkeys() 
        print('Ending program in between') 
        os._exit(0) 
    keyboard.add_hotkey('Esc+q', endProgram,suppress=True) 
    mouse = Controller() 
    keyboard.press("left windows") 
    auto.sleep(1.0) 
    keyboard.press("d") 
    auto.sleep(1.0) 
    keyboard.release("d") 
    auto.sleep(1.0) 
    keyboard.press("r") 
    auto.sleep(1.0) 
    keyboard.release("r") 
    auto.sleep(1.0) 
    keyboard.release("left windows") 
    auto.sleep(1.0) 
    keyboard.press("n") 
    auto.sleep(1.0) 
    keyboard.release("n") 
    auto.sleep(1.0) 
    keyboard.press("o") 
    auto.sleep(1.0) 
    keyboard.release("o") 
    auto.sleep(1.0) 
    keyboard.press("t") 
    auto.sleep(1.0) 
    keyboard.release("t") 
    auto.sleep(1.0) 
    keyboard.press("e") 
    auto.sleep(1.0) 
    keyboard.release("e") 
    auto.sleep(1.0) 
    keyboard.press("a") 
    auto.sleep(1.0) 
    keyboard.release("a") 
    auto.sleep(1.0) 
    keyboard.press("backspace") 
    auto.sleep(1.0) 
    keyboard.release("backspace") 
    auto.sleep(1.0) 
    keyboard.press("p") 
    auto.sleep(1.0) 
    keyboard.release("p") 
    auto.sleep(1.0) 
    keyboard.press("a") 
    auto.sleep(1.0) 
    keyboard.release("a") 
    auto.sleep(1.0) 
    keyboard.press("d") 
    auto.sleep(1.0) 
    keyboard.release("d") 
    auto.sleep(1.0) 
    keyboard.press("right shift") 
    auto.sleep(1.0) 
    keyboard.press("+") 
    auto.sleep(1.0) 
    keyboard.release("+") 
    auto.sleep(1.0) 
    keyboard.press("+") 
    auto.sleep(1.0) 
    keyboard.release("+") 
    auto.sleep(1.0) 
    keyboard.release("right shift") 
    auto.sleep(1.0) 
    keyboard.press("enter") 
    auto.sleep(1.0) 
    keyboard.release("enter") 
    auto.sleep(1.0) 
    auto.moveTo( x=110.0, y=82.0,duration=13.86521458625794) 
    utils.searchAppNameForNSeconds("notepad++.exe",5) 
    x,y = utils.searchImageFromScreenshotForNSeconds(stream,"saved_snips_for_cliks/0.png",10) 
    auto.mouseDown(button='left', x=x, y=y, duration = 12.86521458625794) 
    auto.moveTo( x=110.0, y=82.0,duration=1.215153694152825) 
    utils.searchAppNameForNSeconds("notepad++.exe",5) 
    x,y = utils.searchImageFromScreenshotForNSeconds(stream,"saved_snips_for_cliks/1.png",10) 
    auto.mouseUp(button='left', x=x, y=y, duration = 0.21515369415282493) 
    auto.moveTo( x=175.0, y=84.0,duration=1.824607372283939) 
    utils.searchAppNameForNSeconds("notepad++.exe",5) 
    x,y = utils.searchImageFromScreenshotForNSeconds(stream,"saved_snips_for_cliks/2.png",10) 
    auto.mouseDown(button='left', x=x, y=y, duration = 0.8246073722839391) 
    auto.moveTo( x=175.0, y=84.0,duration=1.1000699996948207) 
    utils.searchAppNameForNSeconds("notepad++.exe",5) 
    x,y = utils.searchImageFromScreenshotForNSeconds(stream,"saved_snips_for_cliks/3.png",10) 
    auto.mouseUp(button='left', x=x, y=y, duration = 0.10006999969482067) 
    auto.moveTo( x=251.00000000000003, y=82.0,duration=1.7425284385681188) 
    utils.searchAppNameForNSeconds("notepad++.exe",5) 
    x,y = utils.searchImageFromScreenshotForNSeconds(stream,"saved_snips_for_cliks/4.png",10) 
    auto.mouseDown(button='left', x=x, y=y, duration = 0.7425284385681188) 
    auto.moveTo( x=251.00000000000003, y=82.0,duration=1.1210908889770508) 
    utils.searchAppNameForNSeconds("notepad++.exe",5) 
    x,y = utils.searchImageFromScreenshotForNSeconds(stream,"saved_snips_for_cliks/5.png",10) 
    auto.mouseUp(button='left', x=x, y=y, duration = 0.12109088897705078) 
    stream.stop() 
if __name__ == '__main__': 
    main() 
